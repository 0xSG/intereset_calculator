{"version":3,"sources":["logo.svg","nav/nav.js","Home/DataComp/DataComp.js","Home/ResComp/ResComp.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","src","width","height","alt","Component","DataComp","handleMonthsChange","bind","assertThisInitialized","handlePrincipalChange","principal","months","event","value","target","isNaN","setState","principalDataEvent","monthsDataEvent","type","id","placeholder","onChange","ResComp","currency","interestRate","monthlyPayment","initialState","dataChange","dataSending","Home","handleDataEvent","handlePrincipalDataEvent","handleMonthsDataEvent","data","_this2","interval","setInterval","console","log","clearInterval","_this3","urlWithData","parseInt","axios","get","then","res","rData","amount","numPayments","Home_DataComp_DataComp","dataEvent","Home_ResComp_ResComp","App","nav_nav","src_Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5741d6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport \"./nav.css\";\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img\n            src=\"https://fullthrottlelabs.com/img/logo/logo-2.png\"\n            width=\"80\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"\"\n          />\n          <b>FullThrottle Labs</b>\n        </a>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nclass DataComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { principal: \"\", months: \"\" };\n  }\n  handlePrincipalChange(event) {\n    var value = event.target.value;\n    if (!isNaN(value)) {\n      this.setState({ principal: event.target.value });\n      this.props.principalDataEvent(event.target.value);\n    }\n  }\n  handleMonthsChange(event) {\n    var value = event.target.value;\n    if (!isNaN(value)) {\n      this.setState({ months: event.target.value });\n      this.props.monthsDataEvent(event.target.value);\n    }\n  }\n\n  handleMonthsChange = this.handleMonthsChange.bind(this);\n  handlePrincipalChange = this.handlePrincipalChange.bind(this);\n\n  render() {\n    return (\n      <div>\n        <div className=\"card\">\n          <div className=\"card-body text-left\">\n            <h2 className=\"card-title\">\n              <b>Data Input</b>\n            </h2>\n            <b className=\"card-text\">\n              <form>\n                <input\n                  type=\"text\"\n                  className={\n                    this.state.principal <= 5000 && this.state.principal >= 500\n                      ? \"form-control valid-input\"\n                      : \"form-control invalid-input\"\n                  }\n                  id=\"principalINP\"\n                  placeholder=\"Loan Amount ($500 - $5000)\"\n                  value={this.state.principal}\n                  onChange={this.handlePrincipalChange.bind(this)}\n                />\n                <br />\n                <input\n                  type=\"text\"\n                  className={\n                    this.state.months <= 24 && this.state.months >= 6\n                      ? \"form-control valid-input\"\n                      : \"form-control invalid-input\"\n                  }\n                  id=\"MonthsINP\"\n                  placeholder=\"Loan Duration ( 6 - 24 months)\"\n                  value={this.state.months}\n                  onChange={this.handleMonthsChange.bind(this)}\n                />\n              </form>\n            </b>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataComp;\n","import React, { Component } from \"react\";\n\nclass ResComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"card\">\n          <div className=\"card-body text-left\">\n            <h2 className=\"card-title\">\n              <b>Result</b>\n            </h2>\n\n            <b className=\"card-text \">\n              Principal:{\" \"}\n              <b>\n                {this.props.principal} {this.props.currency}\n              </b>{\" \"}\n              <br />\n              Interest Rate: <b>{this.props.interestRate * 100}%</b>\n              <br />\n              monthly Payment:\n              <b>\n                {this.props.monthlyPayment} {this.props.currency}\n              </b>\n              <br />\n              Duration:\n              <b>{this.props.months}</b> months\n            </b>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResComp;\n","import React, { Component } from \"react\";\nimport DataComp from \"./DataComp/DataComp\";\nimport ResComp from \"./ResComp/ResComp\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nconst initialState = {\n  interestRate: \"0\",\n  monthlyPayment: \"0\",\n  currency: \"USD\",\n  months: \"0\",\n  principal: \"0\",\n  dataChange: \"False\",\n  dataSending: \"False\"\n};\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handlePrincipalDataEvent(data) {\n    this.setState({ principal: data, dataChange: \"True\" });\n  }\n  handleMonthsDataEvent(data) {\n    // console.log(data);\n\n    this.setState({ months: data, dataChange: \"True\" });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      //console.log(this.state.dataChange);\n      if (\n        this.state.months >= 6 &&\n        this.state.months <= 24 &&\n        this.state.principal >= 500 &&\n        this.state.principal <= 5000 &&\n        this.state.dataChange == \"True\"\n      ) {\n        // //color change (remove class name)\n        // var principalINP = document.getElementById(\"principalINP\");\n        // principalINP.classList.remove(\"invalid-input\");\n        // var principalINP = document.getElementById(\"MonthsINP\");\n        // MonthsINP.classList.remove(\"invalid-input\");\n        //Sending data\n        this.handleDataEvent();\n        this.setState({ dataSending: \"True\" });\n        console.log(\"Data send..\");\n      } else {\n        //color change to red (add class name)\n        // var principalINP = document.getElementById(\"principalINP\");\n        // principalINP.classList.add(\"invalid-input\");\n        // var MonthsINP = document.getElementById(\"MonthsINP\");\n        // MonthsINP.classList.add(\"invalid-input\");\n      }\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleDataEvent(event) {\n    //send data to axios and get the result back\n    var urlWithData =\n      \"https://ftl-frontend-test.herokuapp.com/interest?amount=\" +\n      parseInt(this.state.principal) +\n      \"&numMonths=\" +\n      parseInt(this.state.months) +\n      \"\";\n\n    axios.get(urlWithData).then(res => {\n      // save the result in the state\n      const rData = res.data;\n      console.log(\"Data recevied..\");\n\n      this.setState({\n        interestRate: rData.interestRate,\n        monthlyPayment: rData.monthlyPayment.amount,\n        currency: rData.monthlyPayment.currency,\n        months: rData.numPayments,\n        principal: rData.principal.amount,\n        dataChange: \"False\",\n        dataSending: \"False\"\n      });\n    });\n  }\n  handleDataEvent = this.handleDataEvent.bind(this);\n  handlePrincipalDataEvent = this.handlePrincipalDataEvent.bind(this);\n  handleMonthsDataEvent = this.handleMonthsDataEvent.bind(this);\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <DataComp\n              dataEvent={this.handleDataEvent}\n              principalDataEvent={this.handlePrincipalDataEvent}\n              monthsDataEvent={this.handleMonthsDataEvent}\n            />\n          </div>\n\n          <div\n            className={\n              this.state.dataSending == \"False\"\n                ? \"  col-sm\"\n                : \"col-sm start-color-change-anim\"\n            }\n          >\n            <ResComp\n              interestRate={this.state.interestRate}\n              monthlyPayment={this.state.monthlyPayment}\n              currency={this.state.currency}\n              months={this.state.months}\n              principal={this.state.principal}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Nav from \"./nav/nav\";\nimport Home from \"./Home/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <br />\n      <br />\n      <br />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}